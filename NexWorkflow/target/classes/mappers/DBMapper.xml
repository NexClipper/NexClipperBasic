<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="com.nexcloud.workflow.mapper.DBMapper">
    <select id="selectRule" parameterType="java.util.Map" resultType="com.nexcloud.db.domain.Rule">
        select target_system
        	  ,target
        	  ,type
        	  ,scale_type
        	  ,data_source
        	  ,severity
        	  ,`table`
        	  ,metric
        	  ,group_by
        	  ,`condition`
        	  ,message
        	  ,math
        	  ,new_engine
        	  ,notify
        	  ,slack_token
        	  ,slack_channel
        from nexclipper_rule
        where status = 'Y'
        and new_engine = #{new_engine}
    </select>
    
    <select id="selectAgentRule" parameterType="java.util.Map" resultType="com.nexcloud.db.domain.Rule">
        select target_system
        	  ,target
        	  ,type
        	  ,scale_type
        	  ,data_source
        	  ,severity
        	  ,`table`
        	  ,metric
        	  ,group_by
        	  ,`condition`
        	  ,message
        	  ,math
        	  ,new_engine
        	  ,notify
        	  ,slack_token
        	  ,slack_channel
        from nexclipper_rule
        where status = 'Y'
        and new_engine = #{new_engine}
    </select>
    
    
    <select id="selectIncident" parameterType="com.nexcloud.rule.domain.Notification" resultType="java.lang.Integer">
        select count(*) cnt
        from nexclipper_incident
        where target_system = #{target_system}
        and   id = #{id}
        and   start_time = #{start_time}
        and   target = #{target}
    </select>
    
    <update id="updateIncident" parameterType="com.nexcloud.rule.domain.Notification">
		update nexclipper_incident set
			  status 		= #{status}
			 ,finish_time	= ifnull(#{finish_time},now())
		where target_system = #{target_system}
        and   id = #{id}
        and   status		= 'S'
        and   target = #{target}
	</update>
    
    <insert id="insertLog" parameterType="java.util.Map">
    	insert	into nexclipper_log
    	(
    	   	  host_ip
    		, container_id
    		, stream
    		, log
    		, time
    	)
    	values	
    	<foreach collection="list" item="item" separator=" , ">
    	(
    		  #{item.host_ip}
    		, #{item.container_id}
    		, #{item.stream}
    		, #{item.log}
    		, #{item.time}
    	)
    	</foreach>
    </insert>
	
	<insert id="insertIncident" parameterType="com.nexcloud.rule.domain.Notification">
		insert into nexclipper_incident
		(
			 severity
			,target_system
			,target_ip
			,id
			,status
			,start_time
			,target
			,metric
			,`condition`
			,contents
		)
		values
		(
			 #{severity}
			,#{target_system}
			,#{target_ip}
			,#{id}
			,#{status}
			,#{start_time}
			,#{target}
			,#{metric}
			,#{condition}
			,#{contents}
		)
	</insert>
	
	
    
    <update id="updateIncidentFinishTime" parameterType="com.nexcloud.rule.domain.Notification">
		update nexclipper_incident set
			  finish_time	= ifnull(#{finish_time},now())
		where status		= 'F'
        and   finish_time is null
	</update>
	
	
	<select id="selectEmail" parameterType="java.lang.String" resultType="java.util.Map">
        select group_concat(email) email
        	  ,group_concat(email_password) email_password
        from nexclipper_email
        where email_type = #{email_type}
    </select>
</mapper>
